#[allow(clippy::upper_case_acronyms)]
enum OpMode {
    IABC = 0,
    IABx,
    IAsBx,
    IAx,
}

#[allow(clippy::enum_variant_names)]
enum Ops {
    OpMove = 0,
    OpLoadk,
    OpLoadkx,
    OpLoadbool,
    OpLoadnil,
    OpGetupval,
    OpGettabup,
    OpGettable,
    OpSettabup,
    OpSetupval,
    OpSettable,
    OpNewtable,
    OpSelf,
    OpAdd,
    OpSub,
    OpMul,
    OpMod,
    OpPow,
    OpDiv,
    OpIdiv,
    OpBand,
    OpBor,
    OpBxor,
    OpShl,
    OpShr,
    OpUnm,
    OpBnot,
    OpNot,
    OpLen,
    OpConcat,
    OpJmp,
    OpEq,
    OpLt,
    OpLe,
    OpTest,
    OpTestset,
    OpCall,
    OpTailcall,
    OpReturn,
    OpForloop,
    OpForprep,
    OpTforcall,
    OpTforloop,
    OpSetlist,
    OpClosure,
    OpVararg,
    OpExtraarg,
}

enum ArgKind {
    OpArgN = 0, // argument is not used
    OpArgU,     // argument is used
    OpArgR,     // argument is a register or a jump offset
    OpArgK,     // argument is a constant or register/constant
}

pub struct OpCode {
    test_flag: u8,       // operator is a test (next instruction must be a jump)
    set_a_flag: u8,      // instruction set register A
    arg_b_mode: ArgKind, //B arg mode
    arg_c_mode: ArgKind, // C arg mode
    op_mode: OpMode,     // op mode
    name: &'static str,
}

const OPCODES: [OpCode; 47] = [
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "MOVE    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABx,
        name: "LOADK   ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgN,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABx,
        name: "LOADKX  ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "LOADBOOL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "LOADNIL ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "GETUPVAL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETTABUP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SETTABUP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "SETUPVAL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SETTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "NEWTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SELF    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "ADD     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SUB     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "MUL     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "MOD     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "POW     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "DIV     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "IDIV    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "BAND    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "BOR     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "BXOR    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHL     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHR     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "UNM     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "BNOT    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "NOT     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "LEN     ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgR,
        op_mode: OpMode::IABC,
        name: "CONCAT  ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "JMP     ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "EQ      ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "LT      ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgK,
        arg_c_mode: ArgKind::OpArgK,
        op_mode: OpMode::IABC,
        name: "LE      ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgN,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "TEST    ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "TESTSET ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "CALL    ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "TAILCALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "RETURN  ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "FORLOOP ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "FORPREP ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgN,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "TFORCALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgR,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "TFORLOOP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IABC,
        name: "SETLIST ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABx,
        name: "CLOSURE ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgN,
        op_mode: OpMode::IABC,
        name: "VARARG  ",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: ArgKind::OpArgU,
        arg_c_mode: ArgKind::OpArgU,
        op_mode: OpMode::IAx,
        name: "EXTRAARG",
    },
];
